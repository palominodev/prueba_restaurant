---
// Podemos añadir cualquier lógica de Astro aquí si es necesario
// Por ejemplo, determinar la página activa
const currentPath = Astro.url.pathname;
---

<header class="py-4 px-4 md:px-8 lg:px-16 w-full">
  <div class="flex items-center justify-between">
    <h1 class="text-2xl md:text-3xl font-bold uppercase">El Buen Sabor</h1>
    
    <!-- Botón hamburguesa para móviles -->
    <button 
      id="menuButton" 
      class="md:hidden flex flex-col justify-center items-center w-10 h-10 space-y-1.5 cursor-pointer z-50"
      aria-label="Abrir menú"
    >
      <span class="block w-6 h-0.5 bg-black transition-all duration-300"></span>
      <span class="block w-6 h-0.5 bg-black transition-all duration-300"></span>
      <span class="block w-6 h-0.5 bg-black transition-all duration-300"></span>
    </button>
    
    <!-- Navegación para escritorio y móvil -->
    <nav id="mainNav" class="fixed md:relative top-0 right-0 h-screen md:h-auto w-64 md:w-auto bg-white md:bg-transparent shadow-lg md:shadow-none transform translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-40">
      <ul class="flex flex-col md:flex-row md:space-x-8 space-y-6 md:space-y-0 pt-24 md:pt-0 px-8 md:px-0 *:text-lg *:hover:underline">
        <li><a href="#" class={currentPath === "/" ? "font-semibold" : ""}>Menú</a></li>
        <li><a href="#nosotros" class={currentPath === "/#nosotros" ? "font-semibold" : ""}>Nosotros</a></li>
        <li><a href="#ubicacion" class={currentPath === "/#ubicacion" ? "font-semibold" : ""}>Ubicación</a></li>
        <li><a href="#horario" class={currentPath === "/#horario" ? "font-semibold" : ""}>Horario</a></li>
      </ul>
    </nav>
    
    <!-- Overlay para cuando el menú móvil está abierto -->
    <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden"></div>
  </div>
</header>

<script>
  // Función para configurar la interactividad del menú
  function setupMobileMenu() {
    const menuButton = document.getElementById('menuButton');
    const mainNav = document.getElementById('mainNav');
    const overlay = document.getElementById('overlay');
    const menuBars = menuButton?.querySelectorAll('span');
    
    let menuOpen = false;
    
    function toggleMenu() {
      menuOpen = !menuOpen;
      
      // Cambiar clases para mostrar/ocultar menú
      if (menuOpen) {
        mainNav?.classList.remove('translate-x-full');
        mainNav?.classList.add('translate-x-0');
        overlay?.classList.remove('hidden');
        document.body.classList.add('overflow-hidden');
        
        // Transformar el icono de hamburguesa en X
        if (menuBars && menuBars.length === 3) {
          menuBars[0].classList.add('rotate-45', 'translate-y-2');
          menuBars[1].classList.add('opacity-0');
          menuBars[2].classList.add('-rotate-45', '-translate-y-2');
        }
        
        menuButton?.setAttribute('aria-label', 'Cerrar menú');
      } else {
        mainNav?.classList.add('translate-x-full');
        mainNav?.classList.remove('translate-x-0');
        overlay?.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
        
        // Volver al icono de hamburguesa
        if (menuBars && menuBars.length === 3) {
          menuBars[0].classList.remove('rotate-45', 'translate-y-2');
          menuBars[1].classList.remove('opacity-0');
          menuBars[2].classList.remove('-rotate-45', '-translate-y-2');
        }
        
        menuButton?.setAttribute('aria-label', 'Abrir menú');
      }
    }
    
    // Listeners de eventos
    menuButton?.addEventListener('click', toggleMenu);
    overlay?.addEventListener('click', toggleMenu);
    
    // Cerrar el menú cuando se presiona ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && menuOpen) {
        toggleMenu();
      }
    });
    
    // Cerrar el menú al cambiar el tamaño de la ventana a un tamaño de escritorio
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768 && menuOpen) {
        toggleMenu();
      }
    });
    
    // Cerrar el menú cuando se hace clic en un enlace
    const navLinks = mainNav?.querySelectorAll('a');
    navLinks?.forEach(link => {
      link.addEventListener('click', () => {
        if (window.innerWidth < 768 && menuOpen) {
          toggleMenu();
        }
      });
    });
  }
  
  // Asegurarse de que el DOM esté cargado completamente
  document.addEventListener('DOMContentLoaded', setupMobileMenu);
  
  // Para Astro, también podemos necesitar esto para cuando las páginas se naveguen mediante View Transitions
  document.addEventListener('astro:page-load', setupMobileMenu);
</script>